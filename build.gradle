plugins {
    id 'java'
    id 'io.quarkus'
    id 'dev.clojurephant.clojure' version '0.8.0-beta.4'   //clojure plugin
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy-reactive'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    
    implementation 'org.clojure:clojure:1.11.1'  //clojure language
}

group 'org.acme'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

//for clojurephant
clojure {
    builds {
        main {
            classpath.from = sourceSets.main.compileClasspath
            aotAll()
            //checkAll()
            //reflection = 'silent'
        }
    }
}

tasks.named('compileJava') {
    classpath += files(sourceSets.main.clojure.classesDirectory)

}
